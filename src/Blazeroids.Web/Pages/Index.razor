@page "/"
@using System.Drawing
@using Blazeroids.Core
@using Blazeroids.Core.Assets
@using Blazeroids.Core.GameServices
@using Blazeroids.Web.Game
@using Game.GameServices

@inject IJSRuntime JsRuntime
@inject IAssetsResolver AssetsResolver

<Assets Source="assets/assets.json" OnLoaded="@OnAssetsLoaded" />
<CanvasManager @ref="_canvasManager" OnCanvasAdded="@OnCanvasAdded" />
@if(!_assetsLoaded){
    <div class="preloading"><span>Loading assets...</span></div>
}



@code
{
    CanvasManager _canvasManager;
    GameContext _game;
    
    bool _assetsLoaded = false;
    bool _initialized = false;

	//viene invocato dal componente Assets
	//-------------------------------------------------------------------------------
	//solo la prima volta chiama InitGame
    private async Task OnAssetsLoaded()
    {
        _assetsLoaded = true;
        if(!_initialized){
            await InitGame();
            _initialized = true;
        }
    }

	//viene richiamato dal componente Blazorex.CanvasManager al termine dell'inizializzazione
	//-------------------------------------------------------------------------------
	//invoca index.html.onResize()
    private async Task OnCanvasAdded()
    {
        await JsRuntime.InvokeAsync<object>("onResize");
    }

	//viene richiemato da OnAssetsLoaded()
	//----------------------------------------
	//invoca index.html.initGame(instance) passando l'istanza del componente corrente
	//istanzia l'oggetto SoundService
	//istanzia l'oggetto BlazeroidsGame passando 
	//	l'oggetto del componente blazorex.canvasManager
	//	l'assetresolver (iniettato) 
	//	ed il soundService appena creato.
	//chiama il metodo BlazeroidsGame.InitAsync()
    private async ValueTask InitGame()
    {
        var instance = DotNetObjectReference.Create(this);
        await JsRuntime.InvokeVoidAsync("initGame", instance);

        var soundService = new SoundService(JsRuntime);
        _game = new BlazeroidsGame(_canvasManager, AssetsResolver, soundService);
        await _game.InitAsync();
    }

	//viene invocato da Index.html.OnResize()
	//--------------------------------------------------------------
	//setta la proprietà Size dell'oggetto BlazeroidsGame.Display
    [JSInvokable]
    public void OnResize(int screenWidth, int screenHeight)
    {
        if (null == _game) return;
        _game.Display.Size = new Size(screenWidth, screenHeight);
    }
}
